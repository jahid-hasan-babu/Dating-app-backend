// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  email      String?      @unique
  password   String?
  role       UserRoleEnum @default(USER)
  status     UserStatus   @default(ACTIVATE)
  isVerified veriedStatus @default(NEW)
  googleId   String?
  facebookId String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  profile    Profile?

  @@map("users")
}

model Otp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  otp       Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("otps")
}

model Profile {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  fullName     String?
  username     String?
  phoneNumber  String?
  profileImage String?
  locationLat  String?
  locationLang String?
  country      String?
  city         String?
  age          String?
  gender       GenderStatus?
  dateOfBirth  String?
  height       String?
  interests    Json[]
  about        String?
  relationship RelationStatus?
  language     String?
  work         String?
  gallery      Json[]
  isVerified   veriedStatus    @default(NEW)
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  user         User            @relation(fields: [userId], references: [id])
  userId       String          @unique @db.ObjectId

  @@map("profiles")
}

model Favorite {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userID          String   @db.ObjectId
  favoritedUserId String   @db.ObjectId
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("favorites")
}

model Notification {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userID     String   @db.ObjectId
  receiverID String   @db.ObjectId
  title      String
  body       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Chat {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  senderID   String   @db.ObjectId
  receiverID String   @db.ObjectId
  read       Boolean  @default(false)
  message    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Tour {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  tourName  String
  duration  String
  groupSize String
  tourType  String
  language  String
  about     String
  startTime String
  endTime   String
  location  String
  latitude  String
  longitude String
  includes  String
  excludes  String
  price     String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userID         String   @db.ObjectId
  totalAmount    Float
  paymentMethod  String
  cardName       String
  expiryDate     DateTime
  securityCode   String
  billingZipCode DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Date {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  personOneID String   @db.ObjectId
  personTwoID String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum UserRoleEnum {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVATE
  INACTIVATE
  BLOCKED
}

enum GenderStatus {
  MALE
  FEMALE
}

enum RelationStatus {
  SINGLE
  MARRIED
}

enum veriedStatus {
  NEW
  VERIFIED
}
